<!-- LoginForm.astro -->
---

---

<aside>
<div class="login-container">

  <form action="procesar_login.php" method="post">
      <div class="form-group">
          <label for="usuario">Usuario:</label>
          <input type="text" id="user" name="username" required>
      </div>
      <div class="form-group">
          <label for="password">Contraseña:</label>
          <input type="password" id="password" name="password" required>
      </div>
      <div class="form-group">
          <button type="submit">Iniciar Sesión</button>
      </div>
  </form>
</div>
</aside>
<script>
 /* async function submitForm(event) {
    event.preventDefault();
    const email = event.target.email.value;
    const password = event.target.password.value;

    // Aquí puedes enviar una solicitud al servidor para autenticar al usuario
    // usando los valores de email y password.

    try {
      const response = await client.login(email, password);
      // Maneja la respuesta del servidor aquí, por ejemplo, redirecciona al dashboard.
    } catch (error) {
      // Maneja errores de autenticación aquí, por ejemplo, muestra un mensaje de error.
      console.error("Error de inicio de sesión:", error);
    }
  }*/
</script>
<style >



.login-container {
    background-color: #fff;
    padding: 20px;
    border-radius: 5px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    border: 0;

		padding: 0.5rem;
		font-size: 1.5rem;
		color: var(--gray-300);
		background: radial-gradient(var(--gray-900), var(--gray-800) 150%);
		box-shadow: var(--shadow-md);
}

.form-group {
    margin-bottom: 20px;
}

label {
    display: block;
    margin-bottom: 5px;
}

input[type="text"],
input[type="password"] {
    width: 100%;
    padding: 10px;
    border: 1px solid #ccc;
    border-radius: 3px;
    font-size: 16px;
}

button {

    padding: 10px 20px;
    border: none;
    border-radius: 3px;
    cursor: pointer;
    position: relative;
		display: flex;
		place-content: center;
		text-align: center;
		padding: 0.56em 2em;
		gap: 0.8em;
		color: var(--accent-text-over);
		text-decoration: none;
		line-height: 1.1;
		border-radius: 999rem;
		overflow: hidden;
		background: var(--gradient-accent-orange);
		box-shadow: var(--shadow-md);
		white-space: nowrap;
}

button:hover {
    background-color: #0056b3;
}




	@media (min-width: 20em) {
		button {
			font-size: var(--text-lg);
		}
	}

	/* Overlay for hover effects. */
	button::after {
		content: '';
		position: absolute;
		inset: 0;
		pointer-events: none;
		transition: background-color var(--theme-transition);
		mix-blend-mode: overlay;
	}

	button:focus::after,
	button:hover::after {
		background-color: hsla(var(--gray-999-basis), 0.3);
	}

	@media (min-width: 50em) {
		button {
			padding: 1.125rem 2.5rem;
			font-size: var(--text-xl);
		}
	}
 
	aside {
		display: flex;
		flex-direction: column;
		align-items: center;
		gap: 3rem;
		border-top: 1px solid var(--gray-800);
		border-bottom: 1px solid var(--gray-800);
		padding: 5rem 1.5rem;
		background-color: var(--gray-999_40);
		box-shadow: var(--shadow-sm);
	}

	@media (min-width: 50em) {
		aside {
			padding: 7.5rem;
			flex-direction: row;
			flex-wrap: wrap;
			justify-content: space-between;
		}

		h2 {
			font-size: var(--text-3xl);
			text-align: left;
		}
	}
</style>
